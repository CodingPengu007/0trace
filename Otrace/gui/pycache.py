#################################################################################
# LEGAL NOTICE AT THE BEGINNING
#################################################################################

# The graphical elements in this program were generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

# BSD 3-Clause License
# Copyright (c) 2021, Parth Jadhav
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, StringVar

import os

current_dir = os.path.dirname(os.path.abspath(__file__))
assets_path = os.path.join(current_dir, "assets", "pycache")


def relative_to_assets(path: str) -> Path:
    return assets_path / Path(path)

def on_enable_button_click():
    return "enable"

def on_disable_button_click():
    return "disable"

def main():
    window = Tk()

    window.geometry("500x850")
    window.configure(bg="#383838")


    canvas = Canvas(
        window,
        bg="#383838",
        height=850,
        width=500,
        bd=0,
        highlightthickness=0,
        relief="ridge",
    )

    canvas.place(x=0, y=0)
    canvas.create_rectangle(
        498.0, -1.99932861328125, 500.0, 850.0013427734375, fill="#01D119", outline=""
    )

    canvas.create_rectangle(
        -1.1368683772161603e-13, -2.0, 2.0, 850.0, fill="#01D119", outline=""
    )

    canvas.create_rectangle(-2.0, 0.125, 500.0, 2.125, fill="#01D119", outline="")

    canvas.create_text(
        12.0, 5.3125, anchor="nw", text="Settings", fill="#01D119", font=("Inter", 24 * -1)
    )

    image_close_icon = PhotoImage(file=relative_to_assets("close_icon.png"))
    close_icon = canvas.create_image(479.0, 21.1875, image=image_close_icon)

    canvas.create_rectangle(-2.0, 40.5, 500.0, 42.5, fill="#01D119", outline="")

    canvas.create_rectangle(-2.0, 848.0, 500.0, 850.0, fill="#01D119", outline="")

    image_intro_text = PhotoImage(file=relative_to_assets("intro_text.png"))
    intro_text = canvas.create_image(256.0, 134.0, image=image_intro_text)

    image_pro_box = PhotoImage(file=relative_to_assets("pro_box.png"))
    pro_box = canvas.create_image(251.0, 318.3125, image=image_pro_box)

    image_contra_box = PhotoImage(file=relative_to_assets("contra_box.png"))
    contra_box = canvas.create_image(250.0, 537.5, image=image_contra_box)

    image_suggest_box = PhotoImage(file=relative_to_assets("suggest_box.png"))
    suggest_box = canvas.create_image(249.0, 701.0, image=image_suggest_box)

    canvas.create_text(
        114.0,
        447.4375,
        anchor="nw",
        text="A bit slower startup time as \nPython will need to recompile\nbytecode files\n\nMay not be necessary in \nproduction environments where \nstability is prioritized",
        fill="#FFFFFF",
        font=("Inter", 20 * -1),
    )

    canvas.create_text(
        23.0,
        675.8125,
        anchor="nw",
        text="We recommend to disable it to prioritize\nfaster startup times",
        fill="#FFFFFF",
        font=("Inter", 20 * -1),
    )

    canvas.create_text(
        107.0,
        242.25,
        anchor="nw",
        text="Ensures a clean environment by \nremoving potentially outdated or \ncorrupted files\n\nUseful during development to \navoid issues caused by stale cache",
        fill="#FFFFFF",
        font=("Inter", 20 * -1),
    )

    image_thumbs_down = PhotoImage(file=relative_to_assets("thumbs_down.png"))
    thumbs_down = canvas.create_image(68.0, 537.0, image=image_thumbs_down)

    enable_button_image = PhotoImage(file=relative_to_assets("enable_button.png"))
    enable_button = Button(
        image=enable_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=on_enable_button_click,
        relief="flat",
    )
    enable_button.place(x=16.0, y=771.0, width=200.0, height=53.0)

    disable_button_image = PhotoImage(file=relative_to_assets("disable_button.png"))
    disable_button = Button(
        image=disable_button_image,
        borderwidth=0,
        highlightthickness=0,
        command=on_disable_button_click,
        relief="flat",
    )
    disable_button.place(x=280.0, y=771.0, width=200.0, height=53.0)

    image_settings_icon = PhotoImage(file=relative_to_assets("settings_icon.png"))
    settings_icon = canvas.create_image(128.0, 20.0, image=image_settings_icon)

    image_thumbs_up = PhotoImage(file=relative_to_assets("thumbs_up.png"))
    thumbs_up = canvas.create_image(67.0, 320.0, image=image_thumbs_up)
    window.resizable(False, False)
    window.mainloop()
