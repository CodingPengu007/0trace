
#################################################################################
# LEGAL NOTICE AT THE BEGINNING
#################################################################################

# The graphical elements in this program were generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

# BSD 3-Clause License
# Copyright (c) 2021, Parth Jadhav
# All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, StringVar


import os

current_dir = os.path.dirname(os.path.abspath(__file__))
assets_path = os.path.join(current_dir, "assets", "startup_warning")



def relative_to_assets(path: str) -> Path:
    return assets_path / Path(path)

def main():
    window = Tk()

    window.geometry("500x400")
    window.configure(bg = "#383838")


    canvas = Canvas(
        window,
        bg = "#383838",
        height = 400,
        width = 500,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    canvas.create_rectangle(
        498.0,
        -1.0,
        500.0,
        401.0,
        fill="#FF0004",
        outline="")

    canvas.create_rectangle(
        0.0,
        -1.0,
        2.0,
        401.0,
        fill="#FF0004",
        outline="")

    canvas.create_rectangle(
        -2.0,
        0.23077392578125,
        500.0,
        2.23077392578125,
        fill="#FF0004",
        outline="")

    canvas.create_rectangle(
        -2.0,
        30.0,
        500.0,
        32.0,
        fill="#FF0004",
        outline="")

    canvas.create_rectangle(
        -2.0,
        398.0,
        500.0,
        400.0,
        fill="#FF0004",
        outline="")

    canvas.create_text(
        5.0,
        1.0,
        anchor="nw",
        text="Error",
        fill="#FF0004",
        font=("Inter", 24 * -1)
    )

    image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(
        481.0,
        18.0,
        image=image_image_1
    )

    image_image_2 = PhotoImage(
        file=relative_to_assets("image_2.png"))
    image_2 = canvas.create_image(
        250.0,
        58.0,
        image=image_image_2
    )

    image_image_3 = PhotoImage(
        file=relative_to_assets("image_3.png"))
    image_3 = canvas.create_image(
        251.0,
        183.0,
        image=image_image_3
    )

    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print("button_1 clicked"),
        relief="flat"
    )
    button_1.place(
        x=140.0,
        y=291.0,
        width=220.0,
        height=50.0
    )

    canvas.create_rectangle(
        63.0,
        2.0,
        93.0,
        32.0,
        fill="#FFFFFF",
        outline="")
    window.resizable(False, False)
    window.mainloop()
